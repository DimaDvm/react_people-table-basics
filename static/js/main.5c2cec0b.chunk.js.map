{"version":3,"sources":["api.ts","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","handleClick","to","slug","className","classNames","sex","onClick","name","PersonItem","useState","selectedPerson","setSelectedPerson","classnames","prevSelectedPerson","born","died","PeopleTable","people","map","Loader","PageNavLink","text","isActive","App","setPeople","getPeopleFromServer","useCallback","peopleFromServer","useEffect","role","path","element","replace","length","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5c2cec0b.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n  handleClick: (arg:string) => void;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, handleClick }) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={classNames({\n          'has-text-danger': person.sex === 'm',\n        })}\n        onClick={() => handleClick(person.slug)}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\n// import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n  // const { PersonSlug = '' } = useParams();\n\n  const handleClick = (slug: string) => {\n    setSelectedPerson((prevSelectedPerson) => {\n      return prevSelectedPerson !== slug ? slug : '';\n    });\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classnames({\n        'has-background-warning': selectedPerson === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} handleClick={handleClick} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport {\n  FC, useCallback, useEffect, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { PeopleTable } from './components/PeopleTable';\nimport { Loader } from './components/Loader';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const getPeopleFromServer = useCallback(async () => {\n    const peopleFromServer = await getPeople();\n\n    setPeople(peopleFromServer);\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, [getPeopleFromServer]);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n\n            <PageNavLink to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"people/:slug\"\n              element={<PeopleTable people={people} />}\n            />\n\n            <Route\n              path=\"/people\"\n              element={<h1 className=\"title\">People Page</h1>}\n            />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n\n              {people.length < 1 ? <Loader /> : <PeopleTable people={people} />}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}